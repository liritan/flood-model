import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint
import process as process
from radar_diagram import RadarDiagram

st.set_page_config(
    page_title="–ú–æ–¥–µ–ª—å –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π –Ω–∞–≤–æ–¥–Ω–µ–Ω–∏—è", 
    layout="wide",
    page_icon="üåä"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
if 'data_sol' not in st.session_state:
    st.session_state.data_sol = None
if 'calculation_done' not in st.session_state:
    st.session_state.calculation_done = False
if 'free_members' not in st.session_state:
    st.session_state.free_members = None

st.title("üåä –ú–æ–¥–µ–ª—å –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π –Ω–∞–≤–æ–¥–Ω–µ–Ω–∏—è")
st.markdown("---")

tab1, tab2, tab3, tab4 = st.tabs([" –ü–∞—Ä–∞–º–µ—Ç—Ä—ã", " –ì—Ä–∞—Ñ–∏–∫–∏", " –î–∏–∞–≥—Ä–∞–º–º–∞", " –§—É–Ω–∫—Ü–∏–∏"])

with tab1:
    st.header("–í—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –Ω–∞–≤–æ–¥–Ω–µ–Ω–∏—è")
    
    start_values = []
    labels = process.labels_array()
    
    # –°–æ–∑–¥–∞–µ–º 14 –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ (Z1-Z14) –≤ 2 –∫–æ–ª–æ–Ω–∫–∏
    cols = st.columns(2)
    for i in range(14):
        with cols[i % 2]:
            default_values = {
            0: 0.3,   # Z1 - —á–∏—Å–ª–æ –ø–æ–≥–∏–±—à–∏—Ö –ª—é–¥–µ–π
            1: 0.7,   # Z2 - –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ—Ä–∞–∂–∞—é—â–µ–≥–æ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è
            2: 0.8,   # Z3 - –ø–ª–æ—â–∞–¥—å –∑–æ–Ω—ã –ß–°
            3: 0.5,   # Z4 - —á–∏—Å–ª–æ –ª—é–¥–µ–π, —É—Ç—Ä–∞—Ç–∏–≤—à–∏—Ö –∏–º—É—â–µ—Å—Ç–≤–æ
            4: 0.6,   # Z5 - —É—â–µ—Ä–± –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            5: 0.9,   # Z6 - –æ–±—ä–µ–º –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–Ω–æ–≥–æ –≥—Ä—É–Ω—Ç–∞
            6: 0.7,   # Z7 - –ø–ª–æ—â–∞–¥—å –∑–µ–º–µ–ª—å, –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∏–∑ –æ–±–æ—Ä–æ—Ç–∞
            7: 0.4,   # Z8 - —Å–Ω–∏–∂–µ–Ω–∏–µ –ø–ª–æ–¥–æ—Ä–æ–¥–∏—è –∑–µ–º–µ–ª—å
            8: 0.6,   # Z9 - –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
            9: 0.2,   # Z10 - –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
            10: 0.5,  # Z11 - —á–∏—Å–ª–æ –ø–æ—Ä–∞–∂–µ–Ω–Ω—ã—Ö —Å–µ–ª—å—Ö–æ–∑ –∂–∏–≤–æ—Ç–Ω—ã—Ö
            11: 0.8,  # Z12 - –≤–µ–ª–∏—á–∏–Ω–∞ –ø–æ–≥–∏–±—à–µ–≥–æ —É—Ä–æ–∂–∞—è
            12: 0.4,  # Z13 - –ø–ª–æ—â–∞–¥—å —É–Ω–∏—á—Ç–æ–∂–µ–Ω–Ω—ã—Ö –ª–µ—Å–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤
            13: 0.7   # Z14 - —É—â–µ—Ä–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –µ–¥–∏–Ω–∏—Ü–µ
        }
            value = st.number_input(
                labels[i],
                value=default_values.get(i, 0.5),
                min_value=0.0,
                max_value=1.0,
                key=f"param_{i}"
            )
            start_values.append(value)

    st.header("–°–∏—Å—Ç–µ–º–∞ –∏–∑ 7 —Ñ—É–Ω–∫—Ü–∏–π –≤–ª–∏—è–Ω–∏—è")
    
    free_members = []
    
    # 7 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π —Å–∏—Å—Ç–µ–º—ã
    function_types = [
        "–ö—É–±–∏—á–µ—Å–∫–∏–π –ø–æ–ª–∏–Ω–æ–º: ax¬≥ + bx¬≤ + cx + d",
        "–õ–∏–Ω–µ–π–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: ax + b", 
        "–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –ø–æ–ª–∏–Ω–æ–º: ax¬≤ + bx + c",
        "–õ–∏–Ω–µ–π–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: ax + b",
        "–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –ø–æ–ª–∏–Ω–æ–º: ax¬≤ + bx + c", 
        "–õ–∏–Ω–µ–π–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: ax + b",
        "–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –ø–æ–ª–∏–Ω–æ–º: ax¬≤ + bx + c"
    ]
    
    function_descriptions = [
        "F1: –í–ª–∏—è–Ω–∏–µ –Ω–∞ —á–∏—Å–ª–æ –ø–æ–≥–∏–±—à–∏—Ö –æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è",
        "F2: –í–ª–∏—è–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è –æ—Ç –ø–ª–æ—â–∞–¥–∏ –∑–µ–º–µ–ª—å",
        "F3: –í–ª–∏—è–Ω–∏–µ –Ω–∞ –ø–ª–æ—â–∞–¥—å –∑–æ–Ω—ã –ß–° –æ—Ç —á–∏—Å–ª–∞ –ø–æ–≥–∏–±—à–∏—Ö",
        "F4: –í–ª–∏—è–Ω–∏–µ –Ω–∞ —á–∏—Å–ª–æ –ª—é–¥–µ–π, —É—Ç—Ä–∞—Ç–∏–≤—à–∏—Ö –∏–º—É—â–µ—Å—Ç–≤–æ, –æ—Ç –ø–ª–æ—â–∞–¥–∏ –∑–æ–Ω—ã –ß–°",
        "F5: –í–ª–∏—è–Ω–∏–µ –Ω–∞ —É—â–µ—Ä–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º –æ—Ç –æ–±—ä–µ–º–∞ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–Ω–æ–≥–æ –≥—Ä—É–Ω—Ç–∞",
        "F6: –í–ª–∏—è–Ω–∏–µ –Ω–∞ –æ–±—ä–µ–º –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–Ω–æ–≥–æ –≥—Ä—É–Ω—Ç–∞ –æ—Ç —á–∏—Å–ª–∞ –ª—é–¥–µ–π, —É—Ç—Ä–∞—Ç–∏–≤—à–∏—Ö –∏–º—É—â–µ—Å—Ç–≤–æ",
        "F7: –í–ª–∏—è–Ω–∏–µ –Ω–∞ –ø–ª–æ—â–∞–¥—å –∑–µ–º–µ–ª—å –æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞"
    ]
    
    for i in range(7):
        with st.expander(f"–§—É–Ω–∫—Ü–∏—è {i+1}: {function_descriptions[i]}", expanded=i==0):
            st.write(f"**–¢–∏–ø:** {function_types[i]}")
            
            if i == 0:  # –ö—É–±–∏—á–µ—Å–∫–∏–π –ø–æ–ª–∏–Ω–æ–º
                cols = st.columns(4)
                with cols[0]:
                    a = st.number_input("a (x¬≥)", value=0.1, key=f"f{i}_a")
                with cols[1]:
                    b = st.number_input("b (x¬≤)", value=0.2, key=f"f{i}_b")
                with cols[2]:
                    c = st.number_input("c (x)", value=0.3, key=f"f{i}_c")
                with cols[3]:
                    d = st.number_input("d", value=0.4, key=f"f{i}_d")
                free_members.append([a, b, c, d])
                
            elif i in [1, 3, 5]:  # –õ–∏–Ω–µ–π–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
                cols = st.columns(2)
                with cols[0]:
                    a = st.number_input("a (x)", value=0.5, key=f"f{i}_a")
                with cols[1]:
                    b = st.number_input("b", value=0.1, key=f"f{i}_b")
                free_members.append([a, b])
                
            else:  # –ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ –ø–æ–ª–∏–Ω–æ–º—ã (i in [2, 4, 6])
                cols = st.columns(3)
                with cols[0]:
                    a = st.number_input("a (x¬≤)", value=0.1, key=f"f{i}_a")
                with cols[1]:
                    b = st.number_input("b (x)", value=0.2, key=f"f{i}_b")
                with cols[2]:
                    c = st.number_input("c", value=0.3, key=f"f{i}_c")
                free_members.append([a, b, c])

    # –ö–Ω–æ–ø–∫–∞ —Ä–∞—Å—á–µ—Ç–∞
    st.markdown("---")
    if st.button("üöÄ –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞—Å—á–µ—Ç", use_container_width=True):
        with st.spinner("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä–∞—Å—á–µ—Ç —Å–∏—Å—Ç–µ–º—ã –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π..."):
            try:
                st.session_state.free_members = free_members
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
                process.free_members_of_fun_expr = free_members
                
                # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π
                process.init_default_functions()
                
                # –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á–µ—Ç
                t, data_sol = process.process_calculation(start_values, free_members)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                st.session_state.data_sol = data_sol
                st.session_state.t = t
                st.session_state.calculation_done = True
                
                st.success("‚úÖ –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
                
            except Exception as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏: {str(e)}")

with tab2:
    st.header("–î–∏–Ω–∞–º–∏–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–∏—Å—Ç–µ–º—ã")
    
    if st.session_state.calculation_done and st.session_state.data_sol is not None:
        t = st.session_state.t
        data_sol = st.session_state.data_sol
        labels = process.labels_array()
        
        fig, ax = plt.subplots(figsize=(12, 8))
        for i in range(14):
            ax.plot(t, data_sol[:, i], label=labels[i], linewidth=2, alpha=0.7)
        
        ax.set_xlabel('–í—Ä–µ–º—è')
        ax.set_ylabel('–ó–Ω–∞—á–µ–Ω–∏–µ')
        ax.set_title('–î–∏–Ω–∞–º–∏–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–∏—Å—Ç–µ–º—ã –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π')
        ax.legend(bbox_to_anchor=(1.05, 1), loc='upper left', fontsize=9)
        ax.grid(True, alpha=0.3)
        ax.set_xlim([0, 1])
        
        st.pyplot(fig)
        
    else:
        st.info("‚ÑπÔ∏è –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ –≤–∫–ª–∞–¥–∫–µ '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã'")

with tab3:
    st.header("–†–∞–¥–∞—Ä-–¥–∏–∞–≥—Ä–∞–º–º—ã")
    
    if st.session_state.calculation_done and st.session_state.data_sol is not None:
        # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–≥—Ä–∞–º–º—ã
        radar = RadarDiagram()
        diagrams = {}
        data_sol = st.session_state.data_sol
        labels = ["Z1", "Z2", "Z3", "Z4", "Z5", "Z6", "Z7", "Z8", "Z9", "Z10", "Z11", "Z12", "Z13", "Z14"]
        n = len(data_sol)
        
        # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - –ø–æ–∫–∞–∂–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        st.write("**–†–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:**")
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.write("–ù–∞—á–∞–ª—å–Ω—ã–µ:")
            for i, val in enumerate(data_sol[0]):
                st.write(f"Z{i+1}: {val:.3f}")
        
        with col2:
            quarter_idx = n // 4
            st.write(f"1/4 –≤—Ä–µ–º–µ–Ω–∏ (—à–∞–≥ {quarter_idx}):")
            for i, val in enumerate(data_sol[quarter_idx]):
                st.write(f"Z{i+1}: {val:.3f}")
        
        with col3:
            st.write("–ö–æ–Ω–µ—á–Ω—ã–µ:")
            for i, val in enumerate(data_sol[-1]):
                st.write(f"Z{i+1}: {val:.3f}")
   
        diagrams['initial'] = radar.draw([data_sol[0]], labels, 
                                       "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã –≤ –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏")
        
        quarter_idx = n // 4
        diagrams['quarter'] = radar.draw([data_sol[0], data_sol[quarter_idx]], labels,
                                       "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã –≤ 1 —á–µ—Ç–≤–µ—Ä—Ç–∏")
        
        half_idx = n // 2
        diagrams['half'] = radar.draw([data_sol[0], data_sol[half_idx]], labels,
                                    "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã –≤–æ 2 —á–µ—Ç–≤–µ—Ä—Ç–∏")
        
        three_quarter_idx = 3 * n // 4
        diagrams['three_quarters'] = radar.draw([data_sol[0], data_sol[three_quarter_idx]], labels,
                                              "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã –≤ 3 —á–µ—Ç–≤–µ—Ä—Ç–∏")
        
        diagrams['final'] = radar.draw([data_sol[0], data_sol[-1]], labels,
                                     "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.subheader("–ù–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç")
            st.pyplot(diagrams['initial'])
            
            st.subheader("1/2 –≤—Ä–µ–º–µ–Ω–∏")
            st.pyplot(diagrams['half'])
            
            st.subheader("–ö–æ–Ω–µ—á–Ω—ã–π –º–æ–º–µ–Ω—Ç")
            st.pyplot(diagrams['final'])
        
        with col2:
            st.subheader("1/4 –≤—Ä–µ–º–µ–Ω–∏")
            st.pyplot(diagrams['quarter'])
            
            st.subheader("3/4 –≤—Ä–µ–º–µ–Ω–∏")
            st.pyplot(diagrams['three_quarters'])
            
    else:
        st.info("–í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ –≤–∫–ª–∞–¥–∫–µ '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã' —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–∏–∞–≥—Ä–∞–º–º—ã")


with tab4:
    st.header("–ì—Ä–∞—Ñ–∏–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π —Å–∏—Å—Ç–µ–º—ã")
    
    if st.session_state.calculation_done and st.session_state.free_members is not None:
        t = st.session_state.t
        fig = process.draw_functions_graphic(t, st.session_state.free_members)
        
        fig.set_size_inches(12, 8)
        ax = fig.gca()
        ax.set_xlabel('–í—Ä–µ–º—è')
        ax.set_ylabel('–ó–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
        ax.set_title('–ì—Ä–∞—Ñ–∏–∫–∏ 7 —Ñ—É–Ω–∫—Ü–∏–π —Å–∏—Å—Ç–µ–º—ã')
        ax.legend()
        ax.grid(True)
        
        st.pyplot(fig)
        
    else:
        st.info("‚ÑπÔ∏è –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ –≤–∫–ª–∞–¥–∫–µ '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã'")

st.markdown("---")
st.markdown("**–°–∏—Å—Ç–µ–º–∞ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π –¥–ª—è –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π –Ω–∞–≤–æ–¥–Ω–µ–Ω–∏—è**")